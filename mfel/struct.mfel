(#
var obj = context () {
    var x = 10;
    var y = 30;
    @println(@struct());
    # a circular context is created here by the var get_x declaration !!!
    var get_x = function() {x}; 
    var get_y = function() {y};
    var set_x = function(new_x) {x := new_x};
    var set_y = function(new_y) {y := new_y};
    @struct()
};
#)

## this one works because a new scope is created after each let
var obj = context () {
    let x = 10 in
    let y = 30 in
    let get_x = function() {x} in
    let get_y = function() {y} in
    let set_x = function(new_x) {x := new_x} in
    let set_y = function(new_y) {y := new_y} in
    @struct()
};
@println(obj.get_x());
@println(obj.y);
obj.set_x(obj.x + 1);
obj.set_y(obj.y + 5);
@println(obj.x);
@println(obj.get_y());
